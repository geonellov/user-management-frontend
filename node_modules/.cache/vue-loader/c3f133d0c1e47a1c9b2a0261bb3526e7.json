{"remainingRequest":"/home/gmontehermoso/user-management-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gmontehermoso/user-management-vue/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/gmontehermoso/user-management-vue/src/views/Home.vue","mtime":1598786416793},{"path":"/home/gmontehermoso/user-management-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gmontehermoso/user-management-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/gmontehermoso/user-management-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gmontehermoso/user-management-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwppbXBvcnQgdXNlcnNEYXRhIGZyb20gJ0AvZ3JhcGhxbC9xdWVyaWVzL1VzZXJzLmdxbCcKaW1wb3J0IHZpZXdVc2VyIGZyb20gJ0AvZ3JhcGhxbC9xdWVyaWVzL1VzZXIuZ3FsJwppbXBvcnQgYWRkVXNlciBmcm9tICdAL2dyYXBocWwvbXV0YXRpb25zL2FkZFVzZXIuZ3FsJwppbXBvcnQgZGVsVXNlciBmcm9tICdAL2dyYXBocWwvbXV0YXRpb25zL2RlbGV0ZVVzZXIuZ3FsJwppbXBvcnQgZWRpdFVzZXIgZnJvbSAnQC9ncmFwaHFsL211dGF0aW9ucy9lZGl0VXNlci5ncWwnCi8vIGltcG9ydCBIZWxsb1dvcmxkIGZyb20gIkAvY29tcG9uZW50cy9Vc2VyTGlzdCIKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSG9tZScsCiAgY29tcG9uZW50czogewogICAgLy8gSGVsbG9Xb3JsZAogIH0sCiAgbW91bnRlZCgpIHsKICAgICAgdGhpcy51c2Vyc0xpc3QoKQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJzOltdLAogICAgICBlZGl0TW9kZTogZmFsc2UsCiAgICAgIHVzZXJJRDogIiIsCiAgICAgIGZpcnN0TmFtZTogIiIsCiAgICAgIGxhc3ROYW1lOiAiIiwKICAgICAgZW1haWw6ICIiCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgdXNlcnNMaXN0KCl7CiAgICAgIHRoaXMuJGFwb2xsby5xdWVyeSh7CiAgICAgICAgcXVlcnk6IHVzZXJzRGF0YSwKICAgICAgfSkudGhlbigoZGF0YSkgPT4gewogICAgICAgIHRoaXMudXNlcnMgPSBkYXRhLmRhdGEudXNlcnMKICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgLy8gRXJyb3IKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICB9KQogICAgfSwKICAgIHNlbGVjdFVzZXIodXNlcikgewogICAgICB0aGlzLiRhcG9sbG8ucXVlcnkoewogICAgICAgIHF1ZXJ5OiB2aWV3VXNlciwKICAgICAgICB2YXJpYWJsZXM6ewogICAgICAgICAgaWQ6IHVzZXIKICAgICAgICB9CiAgICAgIH0pLnRoZW4oKGRhdGEpID0+IHsKICAgICAgICB0aGlzLnVzZXJJRCA9IGRhdGEuZGF0YS51c2VyLmlkCiAgICAgICAgdGhpcy5maXJzdE5hbWU9IGRhdGEuZGF0YS51c2VyLmZpcnN0TmFtZQogICAgICAgIHRoaXMubGFzdE5hbWUgPSBkYXRhLmRhdGEudXNlci5sYXN0TmFtZQogICAgICAgIHRoaXMuZW1haWwgPSBkYXRhLmRhdGEudXNlci5lbWFpbAoKICAgICAgICB0aGlzLmVkaXRNb2RlID0gdHJ1ZQoKICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgLy8gRXJyb3IKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKQogICAgICB9KQogICAgfSwKICAgIGFkZFVzZXIoKXsKICAgICAgLy8gQ2FsbCB0byB0aGUgZ3JhcGhxbCBtdXRhdGlvbgogICAgICB0aGlzLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAvLyBRdWVyeQogICAgICAgIG11dGF0aW9uOiBhZGRVc2VyLAogICAgICAgIC8vIFBhcmFtZXRlcnMKICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5maXJzdE5hbWUsCiAgICAgICAgICBsYXN0TmFtZTogdGhpcy5sYXN0TmFtZSwKICAgICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsCiAgICAgICAgfQogICAgICB9KS50aGVuKChkYXRhKSA9PiB7CiAgICAgICAgLy8gUmVzdWx0CiAgICAgICAgdGhpcy5jbGVhckZyb20oKQogICAgICAgIGNvbnNvbGUubG9nKGRhdGEpCgogICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAvLyBFcnJvcgogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgICAgIH0pCiAgICB9LAogICAgZGVsZXRlVXNlcigpewogICAgICAvLyBDYWxsIHRvIHRoZSBncmFwaHFsIG11dGF0aW9uCiAgICAgIHRoaXMuJGFwb2xsby5tdXRhdGUoewogICAgICAgIC8vIFF1ZXJ5CiAgICAgICAgbXV0YXRpb246IGRlbFVzZXIsCiAgICAgICAgLy8gUGFyYW1ldGVycwogICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgaWQ6IHRoaXMudXNlcklECiAgICAgICAgfQogICAgICB9KS50aGVuKChkYXRhKSA9PiB7CiAgICAgICAgLy8gUmVzdWx0CiAgICAgICAgY29uc29sZS5sb2coZGF0YSkKCiAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgIC8vIEVycm9yCiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcikKICAgICAgfSkKICAgIH0sCiAgICBlZGl0VXNlcigpewogICAgICAvLyBDYWxsIHRvIHRoZSBncmFwaHFsIG11dGF0aW9uCiAgICAgIHRoaXMuJGFwb2xsby5tdXRhdGUoewogICAgICAgIC8vIFF1ZXJ5CiAgICAgICAgbXV0YXRpb246IGVkaXRVc2VyLAogICAgICAgIC8vIFBhcmFtZXRlcnMKICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgIGlkOiB0aGlzLnVzZXJJRCwKICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5maXJzdE5hbWUsCiAgICAgICAgICBsYXN0TmFtZTogdGhpcy5sYXN0TmFtZSwKICAgICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsCiAgICAgICAgfQogICAgICB9KS50aGVuKChkYXRhKSA9PiB7CiAgICAgICAgLy8gUmVzdWx0CiAgICAgICAgY29uc29sZS5sb2coZGF0YSkKICAgICAgICB0aGlzLmNsZWFyRnJvbSgpCiAgICAgICAgdGhpcy5lZGl0TW9kZSA9IGZhbHNlCgogICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAvLyBFcnJvcgogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgICAgIH0pCiAgICB9LAogICAgY2FuY2VsVXBkYXRlKCl7CiAgICAgIHRoaXMuZWRpdE1vZGUgPSBmYWxzZQogICAgICB0aGlzLmNsZWFyRnJvbSgpCiAgICB9LAogICAgY2xlYXJGcm9tKCl7CiAgICAgIHRoaXMudXNlcklEID0gIiIKICAgICAgdGhpcy5maXJzdE5hbWU9ICIiCiAgICAgIHRoaXMubGFzdE5hbWUgPSAiIgogICAgICB0aGlzLmVtYWlsID0gIiIKICAgIH0KCiAgfQp9Cg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n<!--    <HelloWorld msg=\"\"/>-->\n    <div class=\"row\">\n      <div class=\"user-list\">\n        <!--Query for all Users-->\n<!--        <ApolloQuery :query=\"require('@/graphql/queries/Users.gql')\">-->\n<!--          <template slot-scope=\"{ result: { data, loading } }\">-->\n<!--            <div v-if=\"loading\">Loading...</div>-->\n<!--            <div v-else>-->\n<!--              <a v-for=\"user of data.users\" :key=\"user.id\" @click=\"selectUser(user.id)\">-->\n<!--               {{ user.firstName }}-->\n<!--              </a>-->\n<!--            </div>-->\n<!--          </template>-->\n<!--        </ApolloQuery>-->\n\n\n        <template>\n          <a v-for=\"user of users\" :key=\"user.id\" @click=\"selectUser(user.id)\">\n            {{ user.firstName}}\n          </a>\n        </template>\n\n\n      </div>\n      <div class=\"content-side\">\n        <!--Form for Add and Edit-->\n        <div v-if=\"editMode\">\n          <button class=\"delBtn\" @click.prevent=\"deleteUser\">Delete</button>\n          <button class=\"editBtn\" @click.prevent=\"cancelUpdate\">Cancel</button>\n          <form action=\"\" method=\"POST\" @submit.prevent=\"editUser\">\n            <label for=\"edit_firstName\">First name:</label><br>\n            <input type=\"text\" id=\"edit_firstName\" v-model=\"firstName\"><br>\n            <label for=\"edit_lastName\">Last name:</label><br>\n            <input type=\"text\" id=\"edit_lastName\" v-model=\"lastName\"><br><br>\n            <label for=\"edit_email\">Email:</label><br>\n            <input type=\"text\" id=\"edit_email\"  v-model=\"email\"><br><br>\n            <input type=\"submit\" value=\"UPDATE\">\n          </form>\n        </div>\n        <div v-else>\n          <form action=\"\" method=\"POST\" @submit.prevent=\"addUser\">\n            <label for=\"add_firstName\">First name:</label><br>\n            <input type=\"text\" id=\"add_firstName\" v-model=\"firstName\"><br>\n            <label for=\"add_lastName\">Last name:</label><br>\n            <input type=\"text\" id=\"add_lastName\" v-model=\"lastName\"><br><br>\n            <label for=\"add_email\">Email:</label><br>\n            <input type=\"text\" id=\"add_email\" v-model=\"email\"><br><br>\n            <input type=\"submit\" value=\"SAVE\">\n          </form>\n        </div>\n\n\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport usersData from '@/graphql/queries/Users.gql'\nimport viewUser from '@/graphql/queries/User.gql'\nimport addUser from '@/graphql/mutations/addUser.gql'\nimport delUser from '@/graphql/mutations/deleteUser.gql'\nimport editUser from '@/graphql/mutations/editUser.gql'\n// import HelloWorld from \"@/components/UserList\"\n\nexport default {\n  name: 'Home',\n  components: {\n    // HelloWorld\n  },\n  mounted() {\n      this.usersList()\n  },\n  data() {\n    return {\n      users:[],\n      editMode: false,\n      userID: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    }\n  },\n\n  methods: {\n    usersList(){\n      this.$apollo.query({\n        query: usersData,\n      }).then((data) => {\n        this.users = data.data.users\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    selectUser(user) {\n      this.$apollo.query({\n        query: viewUser,\n        variables:{\n          id: user\n        }\n      }).then((data) => {\n        this.userID = data.data.user.id\n        this.firstName= data.data.user.firstName\n        this.lastName = data.data.user.lastName\n        this.email = data.data.user.email\n\n        this.editMode = true\n\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    addUser(){\n      // Call to the graphql mutation\n      this.$apollo.mutate({\n        // Query\n        mutation: addUser,\n        // Parameters\n        variables: {\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email\n        }\n      }).then((data) => {\n        // Result\n        this.clearFrom()\n        console.log(data)\n\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    deleteUser(){\n      // Call to the graphql mutation\n      this.$apollo.mutate({\n        // Query\n        mutation: delUser,\n        // Parameters\n        variables: {\n          id: this.userID\n        }\n      }).then((data) => {\n        // Result\n        console.log(data)\n\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    editUser(){\n      // Call to the graphql mutation\n      this.$apollo.mutate({\n        // Query\n        mutation: editUser,\n        // Parameters\n        variables: {\n          id: this.userID,\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email\n        }\n      }).then((data) => {\n        // Result\n        console.log(data)\n        this.clearFrom()\n        this.editMode = false\n\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    cancelUpdate(){\n      this.editMode = false\n      this.clearFrom()\n    },\n    clearFrom(){\n      this.userID = \"\"\n      this.firstName= \"\"\n      this.lastName = \"\"\n      this.email = \"\"\n    }\n\n  }\n}\n</script>\n\n\n<style>\n.row {\n  display: flex;\n  margin-left: 20%;\n  margin-right: 20%;\n}\n.user-list{\n  background: #42b983;\n  flex: 40%;\n}\n.content-side{\n  background: aquamarine;\n  flex: 60%;\n}\nbutton {\n  border: none;\n  color: white;\n  padding: 10px 27px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n}\n.delBtn{\n  background-color: crimson;\n  margin-right: 10px;\n}\n.editBtn{\n  background-color: coral;\n}\n.addBtn{\n  background-color:darkgreen;\n}\ninput {\n  width: 80%;\n}\n</style>\n"]}]}