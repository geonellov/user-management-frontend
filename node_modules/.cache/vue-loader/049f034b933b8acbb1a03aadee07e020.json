{"remainingRequest":"/home/gmontehermoso/user-management-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gmontehermoso/user-management-vue/src/views/Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/gmontehermoso/user-management-vue/src/views/Home.vue","mtime":1598788946671},{"path":"/home/gmontehermoso/user-management-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gmontehermoso/user-management-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/gmontehermoso/user-management-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/gmontehermoso/user-management-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gmontehermoso/user-management-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucm93IHsKICBkaXNwbGF5OiBmbGV4OwogIG1hcmdpbi1sZWZ0OiAyMCU7CiAgbWFyZ2luLXJpZ2h0OiAyMCU7Cn0KLnVzZXItbGlzdHsKICBiYWNrZ3JvdW5kOiAjNDJiOTgzOwogIGZsZXg6IDQwJTsKfQouY29udGVudC1zaWRlewogIGJhY2tncm91bmQ6IGFxdWFtYXJpbmU7CiAgZmxleDogNjAlOwp9CmJ1dHRvbiB7CiAgYm9yZGVyOiBub25lOwogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiAxMHB4IDI3cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgZm9udC1zaXplOiAxNnB4Owp9Ci5kZWxCdG57CiAgYmFja2dyb3VuZC1jb2xvcjogY3JpbXNvbjsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KLmVkaXRCdG57CiAgYmFja2dyb3VuZC1jb2xvcjogY29yYWw7Cn0KLmFkZEJ0bnsKICBiYWNrZ3JvdW5kLWNvbG9yOmRhcmtncmVlbjsKfQppbnB1dCB7CiAgd2lkdGg6IDgwJTsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"grid grid-rows-3 grid-flow-col gap-4\">\n      <div class=\"row-span-3 ...\">sdfsadf</div>\n      <div class=\"row-span-1 col-span-2 ...\">asdf</div>\n      <div class=\"row-span-2 col-span-2 ...\">asdf</div>\n    </div>\n    <div class=\"row bg-blue-500\">\n      <div class=\"user-list flex flex-col bg-gray-200\">\n\n          <a v-for=\"user of users\" :key=\"user.id\" @click=\"selectUser(user.id)\">\n            {{ user.firstName}}\n          </a>\n\n      </div>\n      <div class=\"content-side\">\n        <!--Form for Add and Edit-->\n        <div v-if=\"editMode\">\n          <button class=\"delBtn\" @click.prevent=\"deleteUser\">Delete</button>\n          <button class=\"editBtn\" @click.prevent=\"cancelUpdate\">Cancel</button>\n          <form action=\"\" method=\"POST\" @submit.prevent=\"editUser\">\n            <label for=\"edit_firstName\">First name:</label><br>\n            <input type=\"text\" id=\"edit_firstName\" v-model=\"firstName\"><br>\n            <label for=\"edit_lastName\">Last name:</label><br>\n            <input type=\"text\" id=\"edit_lastName\" v-model=\"lastName\"><br><br>\n            <label for=\"edit_email\">Email:</label><br>\n            <input type=\"text\" id=\"edit_email\"  v-model=\"email\"><br><br>\n            <input type=\"submit\" value=\"UPDATE\">\n          </form>\n        </div>\n        <div v-else>\n          <form action=\"\" method=\"POST\" @submit.prevent=\"addUser\">\n            <label for=\"add_firstName\">First name:</label><br>\n            <input type=\"text\" id=\"add_firstName\" v-model=\"firstName\"><br>\n            <label for=\"add_lastName\">Last name:</label><br>\n            <input type=\"text\" id=\"add_lastName\" v-model=\"lastName\"><br><br>\n            <label for=\"add_email\">Email:</label><br>\n            <input type=\"text\" id=\"add_email\" v-model=\"email\"><br><br>\n            <input type=\"submit\" value=\"SAVE\">\n          </form>\n        </div>\n\n\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport usersData from '@/graphql/queries/Users.gql'\nimport viewUser from '@/graphql/queries/User.gql'\nimport addUser from '@/graphql/mutations/addUser.gql'\nimport delUser from '@/graphql/mutations/deleteUser.gql'\nimport editUser from '@/graphql/mutations/editUser.gql'\n\nexport default {\n  name: 'Home',\n  components: {\n    // HelloWorld\n  },\n  mounted() {\n      this.usersList()\n  },\n  data() {\n    return {\n      users:[],\n      editMode: false,\n      userID: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    }\n  },\n\n  methods: {\n    usersList(){\n      this.$apollo.query({\n        query: usersData,\n      }).then((data) => {\n        this.users = data.data.users\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    selectUser(user) {\n      this.$apollo.query({\n        query: viewUser,\n        variables:{\n          id: user\n        }\n      }).then((data) => {\n        this.userID = data.data.user.id\n        this.firstName= data.data.user.firstName\n        this.lastName = data.data.user.lastName\n        this.email = data.data.user.email\n\n        this.editMode = true\n\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    addUser(){\n      // Call to the graphql mutation\n      this.$apollo.mutate({\n        // Query\n        mutation: addUser,\n        // Parameters\n        variables: {\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email\n        }\n      }).then((data) => {\n        // Result\n        this.clearFrom()\n        console.log(data)\n\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    deleteUser(){\n      // Call to the graphql mutation\n      this.$apollo.mutate({\n        // Query\n        mutation: delUser,\n        // Parameters\n        variables: {\n          id: this.userID\n        }\n      }).then((data) => {\n        // Result\n        console.log(data)\n\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    editUser(){\n      // Call to the graphql mutation\n      this.$apollo.mutate({\n        // Query\n        mutation: editUser,\n        // Parameters\n        variables: {\n          id: this.userID,\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email\n        }\n      }).then((data) => {\n        // Result\n        console.log(data)\n        this.clearFrom()\n        this.editMode = false\n\n      }).catch((error) => {\n        // Error\n        console.error(error)\n      })\n    },\n    cancelUpdate(){\n      this.editMode = false\n      this.clearFrom()\n    },\n    clearFrom(){\n      this.userID = \"\"\n      this.firstName= \"\"\n      this.lastName = \"\"\n      this.email = \"\"\n    }\n\n  }\n}\n</script>\n\n\n<style>\n.row {\n  display: flex;\n  margin-left: 20%;\n  margin-right: 20%;\n}\n.user-list{\n  background: #42b983;\n  flex: 40%;\n}\n.content-side{\n  background: aquamarine;\n  flex: 60%;\n}\nbutton {\n  border: none;\n  color: white;\n  padding: 10px 27px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n}\n.delBtn{\n  background-color: crimson;\n  margin-right: 10px;\n}\n.editBtn{\n  background-color: coral;\n}\n.addBtn{\n  background-color:darkgreen;\n}\ninput {\n  width: 80%;\n}\n</style>\n"]}]}